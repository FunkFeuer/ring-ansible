
- name: install packages
  package:
    name: "{{ item }}"
    state: latest
  with_items:
    - syslog-ng
    - logrotate

- name: create directories
  file:
    name: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: 0755
  with_items:
    - /etc/syslog-ng

- name: create config files
  template:
    src: "{{ item }}"
    dest: "/{{ item }}"
    owner: root
    group: root
    mode: 0644
  notify: syslog reload service
  with_items:
    - etc/default/syslog-ng
    - etc/logrotate.d/syslog-ng

- include_tasks: client.yml
  when: syslog_server|default(None) != true

- include_tasks: server.yml
  when: syslog_server|default(None) == true

- name: create scripts
  template:
    src: "{{ item }}"
    dest: "/{{ item }}"
    owner: root
    group: root
    mode: 0755
  with_items:
    - etc/init.d/syslog-ng

- name: enable service
  service:
    name: syslog-ng
    enabled: yes
    state: started

- name: check logfile existence
  stat: path={{ item }}
  register: logfile
  with_items:
    - /var/log/syslog
    - /var/log/messages
    - /var/log/user.log
    - /var/log/secure
    - /var/log/mail.log
    - /var/log/mail.err
    - /var/log/mail.info
    - /var/log/kern.log
    - /var/log/error
    - /var/log/dmesg
    - /var/log/debug.log
    - /var/log/daemon.log
    - /var/log/cron
    - /var/log/auth.log

- name: set logfile permissions
  file:
    name: "{{ item.item }}"
    owner: root
    group: adm
  when: item.stat.exists == True
  with_items: "{{ logfile.results }}"
