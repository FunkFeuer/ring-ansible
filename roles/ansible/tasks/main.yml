---

- name: "Apt-pin ansible"
  template:
    src: ansible.pref.j2
    dest: /etc/apt/preferences.d/ansible.pref
  register: ansible_pin

- name: "Run apt-get update"
  apt:
    update_cache: yes
  when: ansible_pin.changed

- name: "Ensure Ansible prerequisites are installed"
  apt:
    name:
      - git
      - python3-requests
    state: present

- name: "Ensure Ansible is installed"
  apt:
    name: "ansible={{ ansible_pin_version[ansible_distribution_release] }}"
    state: present

- name: "Create callback plugin dir"
  file: path={{ item }} state=directory
  with_items:
    - /usr/share/ansible/plugins
    - /usr/share/ansible/plugins/callback

- name: "Install callback module"
  template: src=ring_callback.py.j2 dest=/usr/share/ansible/plugins/callback/ring.py

- name: "Install mitogen"
  git:
    repo: 'https://github.com/dw/mitogen.git'
    dest: /opt/mitogen
    version: "{{ mitogen_version[ansible_distribution_release] }}"
    update: "{{ mitogen_update }}"
  when: mitogen == true

- name: "Install mitogen removal script"
  copy:
    src=mitogen_remove
    dest=/usr/local/sbin/mitogen_remove
    owner=root
    group=root
    mode=0755

- name: "Check for mitogen ansible plugin installation"
  stat:
    path: /opt/mitogen/ansible_mitogen/plugins/strategy/mitogen.py
  register: mitogen_plugin

- name: "Create /etc/ansible"
  file: path=/etc/ansible state=directory

- name: "Update ansible.cfg (mitogen)"
  copy:
    src=ansible_mitogen.cfg
    dest=/etc/ansible/ansible.cfg
    owner=root
    group=root
    mode=0644
  when: mitogen_plugin.stat.exists == True and mitogen == true

- name: "Update ansible.cfg (no mitogen)"
  copy:
    src=ansible.cfg
    dest=/etc/ansible/ansible.cfg
    owner=root
    group=root
    mode=0644
  when: mitogen_plugin.stat.exists == False or mitogen != true

- name: "Create /var/log/ansible if needed"
  file:
    path: /var/log/ansible
    state: directory
    owner: root
    group: adm
    mode: 0750

- name: "Create /usr/local/sbin if needed"
  file:
    path: /usr/local/sbin
    state: directory
    mode: 0755

- name: "Ensure run-ansible script exists"
  template:
    src: run-ansible.j2
    dest: /usr/local/sbin/run-ansible
    owner: root
    group: root
    mode: 0755

- name: "Ensure ansible-distupgrade script exists"
  template:
    src: ansible-distupgrade.j2
    dest: /usr/local/sbin/ansible-distupgrade
    owner: root
    group: root
    mode: 0755

- name: "Ensure ansible-cron script exists"
  template:
    src: ansible-cron.j2
    dest: /usr/local/sbin/ansible-cron
    owner: root
    group: root
    mode: 0755

- name: "Remove ansible-reaper"
  file:
    dest: /usr/local/sbin/ansible-reaper
    state: absent

- name: "Ensure Ansible cronjob exists"
  template:
    src: cron.d/ansible.j2
    dest: /etc/cron.d/ansible
    owner: root
    group: root
    mode: 0644

- name: "Remove any old ansible crontab entries"
  lineinfile:
    dest: /var/spool/cron/crontabs/root
    regexp: 'ansible(-|_)pull'
    state: absent

- include_tasks: master.yml
  when: ansible_master|default(None) == true

